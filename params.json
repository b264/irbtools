{"name":"irbtools","tagline":"Improvements for Ruby's IRB","body":"### irbtools\r\n\r\nImprovements for Ruby's IRB console, for example, colored output, and a lot of debugging and introspection methods. Unlike with PRY, you are still in your normal IRB. It is designed to work out-of-the-box so there is no reason to not use it!\r\n\r\n### Setup\r\n\r\nAdd to your project's `Gemfile`:\r\n\r\n```ruby\r\ngem 'irbtools', require: 'binding.repl'\r\n```\r\n\r\nAdd to `~/.irbrc'\r\n\r\n```ruby\r\nrequire 'irbtools'\r\n```\r\n\r\n### Usage\r\n\r\nTry the following things in your enhanced IRB:\r\n\r\n- `vim # starts VIM inside your IRB to edit multi-line code`\r\n- `copy \"string\" # copy something to your system clipboard`\r\n- `mf [1,2,3], [3,2,1] # list methods that transform object 1 into object 2`\r\n- `ls # list current directory contents`\r\n- `src :ls # list the source of a Ruby method (does not work for native C code)`\r\n- `rq:mathn # short way of saying: require 'mathn'`\r\n- `mof [1,2,3] # list available methods for this object for each class/module it inherits from`\r\n- `re \"mail@janlelis.de\", /\\b([A-Z0-9._%+-]+)@([A-Z0-9.-]+\\.[A-Z]{2,10})\\b/i, 0..2 # learn about regex`\r\n\r\n### Further Info\r\n\r\nThere is a lot more. See the [ReadMe file](https://github.com/janlelis/irbtools)!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}